#!/usr/bin/env python
# encoding: utf-8
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

from __future__ import absolute_import, print_function, unicode_literals

import os

from efl import ecore_x
from efl import elementary
from efl.elementary.layout import Layout
from efl.elementary.entry import Entry
from efl.elementary.window import StandardWindow
from efl.evas import EXPAND_BOTH


# install the _() and ngettext() functions in the main namespace
install_prefix = os.path.dirname(os.path.dirname(__file__))
# locale_dir = os.path.join(install_prefix, 'share', 'locale')
# gettext.install('epack', names='ngettext', localedir=locale_dir)


theme = 'default.edj'
theme_file = os.path.join(install_prefix, 'share', 'lightdm-efl-greeter', 'themes', theme)


class MainWin(StandardWindow):
    def __init__(self):
        # window setup
        StandardWindow.__init__(self, 'lightdm-efl-greeter', 'Enter',
                                autodel=True, size=(400,400))
        self.callback_delete_request_add(lambda o: elementary.exit())

        # make the window fullscreen (without a wm)
        x, y, w, h = self.screen_size
        self.size = (w, h)

        # edje layout (theme)
        self.layout = Layout(self, file=(theme_file, 'enter/main'),
                             size_hint_weight=EXPAND_BOTH)
        self.resize_object_add(self.layout)
        self.layout.show()

        # create all the elm widgets and show the win
        self.create_widgets()
        self.show()

        # give focus to the window (without a wm)
        ecore_x_win = ecore_x.Window_from_xid(self.xwindow_xid)
        ecore_x_win.focus()
        self.username_en.focus = True

    def create_widgets(self):
        # username entry
        self.username_en = Entry(self, scrollable=True, single_line=True)
        self.username_en.part_text_set('guide', 'Username')
        self.layout.part_content_set('username_entry', self.username_en)

        # password entry
        self.password_en = Entry(self, scrollable=True, single_line=True)
        self.password_en.part_text_set('guide', 'Password')
        self.layout.part_content_set('password_entry', self.password_en)


class EnterApplication(object):
    def __init__(self):
        self.main_win = MainWin()

   
if __name__ == "__main__":

    elementary.init()
    app = EnterApplication()
    elementary.run()
    elementary.shutdown()
