/*

THEME REFERENCE
===============

Mandatory groups:
   "enter/default_face"    Default image used when user do not have a face
   "enter/user"            The single user object used to populate the users list
   "enter/main"            The main user interface
   "enter/session/xxxx"    Icons for the various sessions
   "enter/session/unknown" Mandatory fallback icon for sessions

"enter/user" Group
------------------
Parts:
   "avatar.swallow" The user image will be swallowed here
   "username.text" The username

Signals theme -> application:
   "user,selected" Must be emitted when a user is selected

"enter/main" Group
------------------
Parts:
   "hostname.text"  Will be filled with the name of the host machine
   "userslist.box"  Will be filled with "enter/user" objects
   "username.entry" The elm entry used to type the username
   "prompt.entry"   The elm entry used to type the password
   "session.text"   Will be filled with the selected session name
   "session.icon"   ElmIcon Externals, will be filled with the session icon
   "lang.text"      Will be filled with the selected language
   "message.entry"  Will be filled with various textual information for the user

Signals application -> theme:
   "userslist,show" Theme must to show the users list
   "prompt,show"    Theme must show the password prompt ("prompt.entry")
   "prompt,hide"    Theme must hide the password prompt
   "ui,hide"        Theme must hide the main ui (and then emit: "ui,hide,done")

Signals theme -> application:
   "sessions,show" Ask the app to show the sessions Menu
   "langs,show"    Ask the app to show the languages Menu
   "powers,show"   Ask the app to show the power actions Menu
   "ui,hide,done"  Notify the app that the ui has been hidden

*/

#define DBG_SHOW(_PART, _R, _G, _B) \
   part { name: "dbg_show"_PART; \
      type: RECT; mouse_events: 0; \
      description { state: "default" 0.0; \
         rel1.to: _PART; rel2.to: _PART; \
         color: _R _G _B 50; } }

#define SHOW(_PART) DBG_SHOW(_PART, 100, 0, 0)

images {
   image: "bg_radgrad.png" COMP;
   image: "sessions_icon.png" COMP;
   image: "power_icon.png" COMP;
   image: "lang_icon.png" COMP;
   image: "default_face.png" COMP;
}

externals {
   external: "elm";
}

collections {

   group { name: "enter/default_face";  /* API */
      parts {
         part { name: "img"; type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               image.normal: "default_face.png";
            }
         }
      }
   }

   group { name: "enter/user";  /* API */
      parts {
         part { name: "hover_border"; type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  to: "bg";
                  offset: -1 -1;
               }
               rel2 {
                  to: "bg";
                  offset: 0 0;
               }
            }
            description { state: "hover" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 255;
            }
         }
         part { name: "bg"; type: RECT;
            description { state: "default" 0.0;
               min: 80 80;
               color: 50 50 50 255;
            }
         }
         part { name: "avatar.swallow"; type: SWALLOW;  /* API */
            description { state: "default" 0.0;
               rel1.offset: 3 3;
               rel2.offset: -4 -4;
            }
         }
         part { name: "username.text"; type: TEXT;  /* API */
            effect: SHADOW;
            description { state: "default" 0.0;
               text {
                  text: "1";
                  font: "Sans";
                  size: 12;
                  align: 0.5 1.0;
               }
            }
         }
      }
      programs {
         program {
            signal: "mouse,in"; source: "bg";
            action: STATE_SET "hover" 0.0;
            transition: LINEAR 0.1 CURRENT;
            target: "hover_border";
         }
         program {
            signal: "mouse,out"; source: "bg";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.1 CURRENT;
            target: "hover_border";
         }
         program {
            signal: "mouse,up,1"; source: "bg";
            action: SIGNAL_EMIT "user,selected" "";
         }
      }
   }

   group { name: "enter/main";  /* API */
      parts {

         part { name: "bg"; type: IMAGE;
            description { state: "default" 0.0;
               image.normal: "bg_radgrad.png";
            }
         }

         part { name: "header"; type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 100;
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 24;
               }
            }

            part { name: "hostname.text"; type: TEXT;  /* API */
               description { state: "default" 0.0;
                  text {
                     font: "Sans"; size: 14;
                  }
               }
            }
            part { name: "power_icon"; type: IMAGE;
               description { state: "default" 0.0;
                  aspect: 1 1; aspect_preference: BOTH;
                  align: 1.0 0.0;
                  rel1.offset: 3 3;
                  rel2.offset: -4 -4;
                  image.normal: "power_icon.png";
               }
            }
            part { name: "lang_icon"; type: IMAGE;
               description { state: "default" 0.0;
                  aspect: 1 1; aspect_preference: BOTH;
                  align: 0.0 0.0;
                  rel1.offset: 2 2;
                  rel2.offset: -3 -3;
                  image.normal: "lang_icon.png";
               }
            }
            part { name: "lang.text"; type: TEXT; /* API */
               description { state: "default" 0.0;
                  rel1 {
                     to: "lang_icon";
                     relative: 1.0 0.0;
                     offset: 3 0;
                  }
                  text {
                     font: "Sans";
                     size: 12;
                     align: 0.0 0.5;
                  }
               }
            }
         }

         part { name: "userslist"; type: SPACER;
            description { state: "default" 0.0;
               rel1.relative: 0.1 (0.25 - 0.5);
               rel2.relative: 0.9 (0.45 - 0.5);
            }
            description { state: "visible" 0.0;
               rel1.relative: 0.1 0.25;
               rel2.relative: 0.9 0.45;
            }
            part { name: "userslist.box"; /* API */
               type: BOX;
               description { state: "default" 0.0;
                  box {
                     layout: "horizontal";
                     align: 0.5 0.0;
                     padding: 4 3;
                  }
               }
            }
         }

         part { name: "prompt.entry"; type: EXTERNAL;  /* API */
            source: "elm/entry";
            clip_to: "prompt_clip";
            description { state: "default" 0.0;
               rel1.to: "username.entry";
               rel2.to: "username.entry";
               params {
                  bool: "single line" 1;
                  bool: "scrollable" 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 2.0;
            }
         }
         part { name: "session.icon"; type: EXTERNAL;  /* API */
            source: "elm/icon";
            clip_to: "prompt_clip";
            description { state: "default" 0.0;
               rel1 {
                  to: "prompt.entry";
                  relative: 0.0 1.0;
                  offset: 0 3;
               }
               rel2 {
                  to: "prompt.entry";
                  relative: 1.0 2.0;
               }
               aspect: 1 1; aspect_preference: BOTH;
               align: 0.0 0.5;
            }
         }
         part { name: "session.text"; type: TEXT;  /* API */
            clip_to: "prompt_clip";
            description { state: "default" 0.0;
               rel1 {
                  to: "session.icon";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "session.icon";
                  relative: 1.0 1.0;
               }
               align: 0.0 0.5;
               text {
                  font: "Sans";
                  size: 12;
                  min: 1 1;
                  ellipsis: -1;
               }
            }
         }
         part { name: "prompt_clip"; type: RECT;
            description { state: "default" 0.0;
               rel1.to_y: "prompt.entry";
               rel2.to_y: "session.text";
               color: 255 255 255 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "username.entry"; type: EXTERNAL;  /* API */
            source: "elm/entry";
            description { state: "default" 0.0;
               min: 180 20;
               rel1 {
                  relative: 0.45 0.5;
               }
               rel2 {
                  relative: 0.55 0.5;
               }
               params {
                  bool: "single line" 1;
                  bool: "scrollable" 1;
               }
            }
         }
         part { name: "message.entry"; type: EXTERNAL;  /* API */
            source: "elm/entry";
            description { state: "default" 0.0;
               min: 180 20;
               rel1 {
                  relative: 0.45 0.75;
               }
               rel2 {
                  relative: 0.55 0.75;
               }
               params {
                  bool: "single line" 1;
                  bool: "scrollable" 0;
               }
            }
         }
         part { name: "debug.text"; type: TEXT;  /* API */
            description { state: "default" 0.0;
               color: 200 0 0 255;
               text {
                  font: "Sans";
                  size: 10;
                  align: 0.5 1.0;
               }
            }
         }
      }
      programs {
         program { name: "userslist_show";  /* API */
            signal: "userslist,show"; source: "";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.4;
            target: "userslist";
         }
         program { name: "prompt_show";  /* API */
            signal: "prompt,show"; source: "";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.2;
            target: "prompt.entry";
            target: "prompt_clip";
         }
         program { name: "prompt_hide";  /* API */
            signal: "prompt,hide"; source: "";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "prompt.entry";
            target: "prompt_clip";
         }
         program { name: "sessions_show";  /* API */
            signal: "mouse,up,1"; source: "session.*";
            action: SIGNAL_EMIT "sessions,show" "";
         }
         program { name: "powers_show";  /* API */
            signal: "mouse,up,1"; source: "power_icon";
            action: SIGNAL_EMIT "powers,show" "";
         }
         program { name: "langs_show";  /* API */
            signal: "mouse,up,1"; source: "lang_icon";
            action: SIGNAL_EMIT "langs,show" "";
         }
         program { name: "langs_show2";  /* API */
            signal: "mouse,up,1"; source: "lang.text";
            action: SIGNAL_EMIT "langs,show" "";
         }
         program { name: "ui_hide"; /* API */
            signal: "ui,hide"; source: "";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.4;
            target: "userslist";
            after: "ui_hide_done";
         }
         program { name: "ui_hide_done";
            action: SIGNAL_EMIT "ui,hide,done" ""; /* API */
         }
      }
   }

#define SESSION_ICON(_GROUP, _FILE)           \
   group { name: _GROUP;                      \
      images { image: _FILE COMP; }           \
      parts { part { name: "im"; type: IMAGE; \
         description { state: "default" 0.0;  \
            image.normal: _FILE; } } } }
   SESSION_ICON("enter/session/enlightenment", "session_enlightenment.png")
   SESSION_ICON("enter/session/gnome", "session_gnome.png")
   SESSION_ICON("enter/session/kde", "session_kde.png")
   SESSION_ICON("enter/session/epymc", "session_epymc.png")
   SESSION_ICON("enter/session/unknown", "session_unknown.png")
#undef SESSION_ICON

}

